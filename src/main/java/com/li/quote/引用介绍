强引用、软引用、弱引用、虚引用分别是什么？
     强引用： 当内存不足时，JVM开始垃圾回收，对于强引用的对象，就算是出现了OOM也不会对该对象进行回收，死都不回收
  强引用是我们最常见的普通对象引用，只要还有强引用指向一个对象，就能表名对象还“活着”，垃圾收集器就不会碰这种对象。在
  Java中最常见的就是强引用，把一个对象赋给一个引用变量，这个引用变量就是一个强引用。当一个对象被强引用变量引用时，他处于
  可达状态。它是不可能被垃圾回收机制进行回收的，即使该对象以后永远都不会被用到JVM也不会回收。因此强引用是Java内存泄露的
  主要原因之一。
      对于一个普通的对象，如果没有其他的引用关系，只要超过了引用的作用域或者显式的将相应（强）引用赋值为null，一般认为就是
  可以被垃圾收集了（当然具体回收时机还是要看垃圾收集策略）
     软引用：软引用是一种相对强引用弱化了一些的引用，需要用java.lang.ref.SoftReference类来实现，可以让对象豁免一些垃圾收集
  对于只有软引用的对象来说：当系统内存充足时它不会回收 当系统内存不足是它会被回收
     软引用通常在对内存敏感的程序中，比如说：高速缓存就是用到的软引用，内存够用的时候就保留，不够用就回收。